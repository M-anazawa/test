nginx-module-njs（ngx_http_js_module）は、NGINXにJavaScript（njs）機能を追加するための公式モジュールです

・インストール方法

CentOSやRHELの場合は、EPELリポジトリや公式NGINXリポジトリからパッケージが提供されている場合があります。
例えば、CentOS 8の場合：

EPELリポジトリの有効化（必要な場合）：
sudo dnf install epel-release

nginx-mod-njs のインストール：
sudo dnf install nginx-mod-njs

njsモジュールの確認
インストール後、nginxのビルドオプションに --with-stream や njs のサポートが含まれているかを確認するには、次のコマンドを実行します。
nginx -V 2>&1 | grep -o njs
また、通常は動的モジュールとして /usr/lib64/nginx/modules/ngx_http_js_module.so（または似たパス）に配置されます。

nginx.conf に load_module 記述を追加：
load_module modules/ngx_http_js_module.so;

※パッケージ名やモジュールの配置パスはOSのバージョンやリポジトリにより異なるため、インストール後にパス等を確認してください。


・nginxの設定

aws_canonical.jsを読み込み利用するため、nginxの設定ファイル（通常は /etc/nginx/nginx.conf）に以下の設定を追加または修正します。

モジュールの読み込み
nginx.confの最上部に、njsモジュールを読み込むディレクティブを追加します。
load_module modules/ngx_http_js_module.so;

js_path と js_import の設定
aws_canonical.jsを配置するディレクトリを指定し、スクリプトをインポートします。例えば、aws_canonical.jsを /etc/nginx/njs/ に配置する場合は、httpコンテキスト内に以下を記述します。
http {
    js_path "/etc/nginx/njs/";
    js_import awsModule from aws_canonical.js;
    ...
}

※ファイル名やインポートするモジュール名は、実際のファイル内容に合わせて調整してください。

その他の設定
aws_canonical.js内のロジックが正しく動作するよう、nginxのエラーログやアクセスログ、jsスクリプトの呼び出し方法（例: js_set など）も適切に設定します。

動作確認
nginxの設定チェック
設定ファイルに誤りがないかテストします。
sudo nginx -t

nginxの再起動
設定が正しい場合、nginxを再起動またはリロードします。
sudo systemctl restart nginx

ログの確認
エラーログやアクセスログをチェックして、njsスクリプトが正しく読み込まれているか、エラーが発生していないかを確認してください。

まとめ
必要なパッケージのインストール: RHEL8/9でEPELリポジトリを有効にし、nginx と nginx-mod-njs をインストールする。
nginx設定: nginx.confの先頭でnjsモジュールを読み込み、js_path と js_import を利用してaws_canonical.jsを利用可能にする。
動作確認: 設定テストとログ確認を行い、スクリプトが正しく動作することを確認する。
この手順により、RHEL8/9上でaws_canonical.jsを利用したnjsスクリプトをNGINX内で実行できる環境が整います。
