以下のような問題点があるため、標準的なHTTPリバースプロキシ（nginxによるプロキシ）として設定しただけでは、そのままでは正常に動作しない可能性が高いです。

背景と問題点
署名付きリクエストの性質
AWS CLI の aws s3 cp は S3 の REST API を利用し、リクエストには AWS SigV4 による署名が付与されます。この署名は、リクエストの HTTP ヘッダー（特に Host ヘッダー）や本文などを含めた「正確な」内容に対して計算されます。
もし途中でリクエスト内容（ヘッダー、URI、ボディなど）が変更されると、S3 側で署名検証が失敗し、リクエストが拒否されます。

今回の経路と潜在的な変更点
経路は
①アカウントAのEC2 →
②アカウントAのNLBインタフェースエンドポイント →
③アカウントBのNLBエンドポイントサービス →
④アカウントBのNLB →
⑤アカウントBのEC2（nginx: リバースプロキシ） →
⑥アカウントBのS3インターフェースエンドポイントサービス →
⑦S3
となります。
特に ⑤ の nginx で HTTP レベルのリバースプロキシ処理を行う場合、nginx が TLS 終端やヘッダーの書き換え（たとえば Host ヘッダーの変更）などを行ってしまうと、元々 EC2 で作成された署名対象の内容と異なってしまい、S3側で署名検証エラーとなるリスクがあります。

もし動作させたい場合
動作させるためには以下のような対策が必要です：

透過型（パススルー）プロキシの実現
nginx を通常の HTTP リバースプロキシではなく、TCPレベルでのパススルー（nginx の stream モジュールなどを使用）として設定し、エンドツーエンドの TLS セッションを確立する必要があります。これにより、クライアントから S3 インターフェースエンドポイントサービス（⑥）まで、リクエスト内容が一切変更されずに転送されます。

ホストヘッダーの維持
もしHTTPプロキシとして動作させる場合は、Host ヘッダーを原本のまま維持し、リクエストに対して一切の書き換えを行わないように設定しなければなりません。
ただし、一般的なHTTPプロキシとしての動作では、TLS終端を行って再暗号化するため、この方法では完全なエンドツーエンド通信は実現できず、署名検証に引っかかる可能性が高いです。

結論
結論として、特別な設定（例：nginxをTCPパススルーとして動作させるなど）を行わなければ、今回の構成でアカウントAのEC2からアカウントBのS3へ、リバースプロキシを経由して aws s3 cp file6.txt s3://アカウントBのS3名 を実行すると、署名検証の失敗等により正常に動作しない可能性が高いです。

つまり、

通常の HTTP リバースプロキシ設定では不可
エンドツーエンドの透過型（パススルー）設定にすれば実現可能な場合もあるが、慎重な構成と検証が必須
この点を踏まえて、構成の設計・設定変更を検討する必要があります。




nginxをフォワードプロキシ（クライアントが明示的に利用するプロキシ）として適切に設定し、HTTP CONNECTなどによるトンネル化を実現すれば、エンドツーエンドのTLS接続が確立されるため、S3へのリクエスト内容が途中で改変されず、署名検証に問題が生じにくくなります。つまり、以下の条件が整えば、今回の構成でも実現可能な可能性が高いです。

必要な条件と注意点
クライアント側のプロキシ設定
aws cli（aws s3 cp）は、環境変数 HTTP_PROXY や HTTPS_PROXY などを通じてフォワードプロキシの情報を認識します。クライアント側で正しくnginxのフォワードプロキシを指定し、HTTPS接続時にHTTP CONNECTを利用できるようにする必要があります。

nginxのフォワードプロキシ設定
nginxをフォワードプロキシとして動作させる場合、HTTP CONNECTメソッドをサポートする設定が必須です。これにより、クライアントとS3間のTLSセッションがnginxによって終端されずにそのままトンネル化され、リクエスト内容（ホストヘッダーやその他の署名対象情報）が変更されないようにする必要があります。

ネットワークパスの透過性
現在の構成では、アカウントAのEC2からのリクエストが複数の中継（NLB、エンドポイントサービス、そしてアカウントB内のnginxなど）を経由します。各中継点がTCPレベルでの接続を単に転送するだけで、アプリケーション層のデータ（特にTLSのトンネル内のデータ）を改変しないことが前提となります。

例えば、NLBは通常TCP（またはTLS）のパススルーとして動作しますが、途中のエンドポイントサービスやその他の機器がHTTPSのCONNECTトンネルをそのまま転送できるかどうかは、事前に確認する必要があります。
証明書とホスト名の一致
エンドツーエンドのTLS接続が確立されるため、S3インターフェースエンドポイントサービス側が提示する証明書が、クライアントで期待されるホスト名（例：s3.<region>.amazonaws.comなど）と一致する必要があります。フォワードプロキシ利用時は、クライアントが接続先のホスト名を正しく解決できるように設定される必要があります。

結論
適切なフォワードプロキシの設定（HTTP CONNECTによるトンネル化）およびクライアント側のプロキシ設定が行われ、かつ各中継点（NLBやエンドポイントサービスなど）がTCPレベルで透過的に接続を転送できれば、nginxをフォワードプロキシとして使用することで、元の署名情報を保持したままS3へのリクエストを実現できる可能性は十分にあります。

ただし、実際の動作は各種設定や環境（ネットワーク機器の挙動、エンドポイントサービスの仕様など）に依存するため、事前の十分な検証が必須となります。
