const allowedIPForAccountsPath = this.node.tryGetContext('allowedIPForAccountsPath');

const accountsPathIPSet = new wafv2.CfnIPSet(this, `${context.webAclNameId}AccountsPathIPSet`, {
  name: `${context.webAclNameId}AccountsPathIPSet`,
  ipAddressVersion: 'IPV4',
  scope: 'REGIONAL',
  addresses: allowedIPForAccountsPath
});

    {
      priority: 3,
      name: 'AllowSpecificIPsForAccountsPath',
      action: { allow: {} },
      visibilityConfig: {
        sampledRequestsEnabled: true,
        cloudWatchMetricsEnabled: true,
        metricName: `${context.webAclNameId}Metric-003`,
      },
      statement: {
        andStatement: {
          statements: [
            {
              byteMatchStatement: {
                fieldToMatch: { uriPath: {} },
                positionalConstraint: 'STARTS_WITH',
                searchString: '/adh/td_operator/v1/accounts',
                textTransformations: [{ priority: 0, type: 'NONE' }],
              },
            },
            {
              ipSetReferenceStatement: {
                arn: accountsPathIPSet.attrArn,
              },
            },
          ],
        },
      },
    },
    {
      priority: 4,
      name: 'BlockNonMatchingIPsForAccountsPath',
      action: { block: {} },
      visibilityConfig: {
        sampledRequestsEnabled: true,
        cloudWatchMetricsEnabled: true,
        metricName: `${context.webAclNameId}Metric-004`,
      },
      statement: {
        andStatement: {
          statements: [
            {
              byteMatchStatement: {
                fieldToMatch: { uriPath: {} },
                positionalConstraint: 'STARTS_WITH',
                searchString: '/adh/td_operator/v1/accounts',
                textTransformations: [{ priority: 0, type: 'NONE' }],
              },
            },
            {
              notStatement: {
                statement: {
                  ipSetReferenceStatement: {
                    arn: accountsPathIPSet.attrArn,
                  },
                },
              },
            },
          ],
        },
      },
    },
  ],
});


  "allowedIPForAccountsPath": [
    "1.1.1.1/32",
    "2.2.2.2/32",
    "3.3.3.3/32",
    "4.4.4.4/32",
    "5.5.5.5/32"
  ]
}
