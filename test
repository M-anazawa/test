Marker が None の場合は、パラメータとして渡さないようにする必要があります。たとえば、以下のようにパラメータ辞書を動的に構築する方法があります。

while True:
    params = {
        'SnapshotType': 'manual'
    }
    # markerが存在する場合のみ、パラメータに追加する
    if marker:
        params['Marker'] = marker

    response = rds_client.describe_db_snapshots(**params)

    snapshots = response.get('DBSnapshots', [])
    marker = response.get('Marker')

    for snapshot in snapshots:
        snapshot_id = snapshot.get('DBSnapshotIdentifier')
        snapshot_time = snapshot.get('SnapshotCreateTime')

        # 必須フィールドがなければスキップ
        if not snapshot_id or not snapshot_time:
            continue

        # 7日以上前かどうか判定 (snapshot_time は datetime.datetime 型)
        if snapshot_time < cutoff_date:
            logger.info(f"Deleting snapshot: {snapshot_id} (Created at: {snapshot_time.isoformat()})")
            rds_client.delete_db_snapshot(
                DBSnapshotIdentifier=snapshot_id
            )

    # Marker が存在しなければ、最終ページなのでループ終了
    if not marker:
        break


説明
パラメータ辞書の構築

まず、params = {'SnapshotType': 'manual'} として初期パラメータを用意します。
もし marker が存在（None ではない）する場合のみ、params に 'Marker': marker を追加します。
API 呼び出し

rds_client.describe_db_snapshots(**params) として、辞書の内容を展開して渡すため、Marker パラメータは marker が存在する場合のみ含まれます。
これにより、初回の呼び出しでは Marker が渡されず、以降、次ページが存在する場合のみ Marker が正しい型（文字列）として渡されるようになります。
この修正により、Marker に None を渡してしまう問題が解消され、エラーが発生しなくなります。
