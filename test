    // コンテキストからSlackチャネルのメールアドレスを取得
    const slackEmail = this.node.tryGetContext('slackEmail');


import * as cdk from 'aws-cdk-lib';
import { Construct } from 'constructs';
import * as sns from 'aws-cdk-lib/aws-sns';
import * as sns_subscriptions from 'aws-cdk-lib/aws-sns-subscriptions';
import * as events from 'aws-cdk-lib/aws-events';
import * as targets from 'aws-cdk-lib/aws-events-targets';

export class HealthSlack extends cdk.Stack {
  constructor(scope: Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

    // 1. SNSトピックの作成
    const healthNotificationTopic = new sns.Topic(this, 'HealthNotificationTopic', {
      displayName: 'AWS Health Notifications Topic'
    });

    // 2. SNSトピックにSlackのメールエンドポイントを設定
    healthNotificationTopic.addSubscription(new sns_subscriptions.EmailSubscription('your-slack-channel-email@example.com'));

    // 3. 東京リージョンのリージョン固有イベント用EventBridgeルールの作成
    new events.Rule(this, 'TokyoRegionalHealthRule', {
      ruleName: 'TokyoRegionalHealthRule',
      eventPattern: {
        source: ['aws.health'],
        detailType: ['AWS Health Event'],
        detail: {
          eventTypeCategory: ['issue', 'accountNotification', 'investigation', 'scheduledChange'],
          eventScopeCode: ['ACCOUNT_SPECIFIC', 'PUBLIC']
        }
      },
      targets: [new targets.SnsTopic(healthNotificationTopic)],
      region: 'ap-northeast-1' // 東京リージョン
    });

    // 4. 米国東部（バージニア北部）のグローバルイベント用EventBridgeルールの作成
    new events.Rule(this, 'VirginiaGlobalHealthRule', {
      ruleName: 'VirginiaGlobalHealthRule',
      eventPattern: {
        source: ['aws.health'],
        detailType: ['AWS Health Global Event'],
        detail: {
          service: ['IAM', 'Route53', 'AWS Health Dashboard'],
          eventTypeCategory: ['issue', 'accountNotification', 'investigation', 'scheduledChange'],
          eventScopeCode: ['ACCOUNT_SPECIFIC', 'PUBLIC']
        }
      },
      targets: [new targets.SnsTopic(healthNotificationTopic)],
      region: 'us-east-1' // 米国東部（バージニア北部）
    });
  }
}
