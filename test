Redshift移行まとめ

◾️事前に準備するファイル
seeds/production-ap03.yml
-----
a56n1:
  accountId: "116686762700”
  nodeType: “ra3.16xlarge"
  numberOfNodes: “4”
  classicResize: true
  instanceUuid: "fd9c8286-4bd5-4252-9ad7-fbfe1d0ef487-test“
  allowNonStandardInstanceName: true
  allowedAddress:
    - "18.176.99.184/32”
    - “35.78.61.200/32”
    - "g:treasuredata-main"
    - "g:treasuredata-vpn"
  dailyBackupCountPerDay: 2
  dailyBackupRetentionDays: 31
  clusterParameterGroupName: "my-custom-cpg-1"
-----

◾️事前作成するリソース
・VPC(S3用endpointは作る？)
・S3バケット（ログ保存用） : dwh-logs-production-ap03
・Secrets Managerのシークレット（Redshift認証用) : aciddb-default-production-ap03
・Redshift Parameter Group : my-custom-cpg-1
・Redshift Subnet Group : ap03-production-main
・パーミッションバウンダリ設定用IAMポリシー : PLT-14709-acid-cfn-permissions-boundary-cloudformation-iam-production-ap03

◾️別のAWSアカウントでデプロイする際に変更が必要な箇所
config/environment.yml 内の対象環境 production-ap03の次を変更する
・awsAccount(AWSアカウントID)
・vpcId(VPC ID) 

src/stack/index.ts内の次をコメントアウトする
・export * from './sns-lambda-stack';

◾️CDKデプロイコマンド
このコマンドでCloudFormationテンプレートが正しく生成できるかを確認します。
-----
cdk synth --context env=staging-aws --context name=a123n1 -----

スタックごとにデプロイすることも可能ですが、この場合はDwhAllStacksで管理している全スタックをまとめてデプロイできます。
--allオプションはApp内の全スタックをデプロイするために利用します。
-----
cdk deploy --all --context env=production-ap03 --context name=a56n1
-----

