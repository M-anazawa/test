// ↓↓↓本番環境のみ適用する Start
if (stage.endsWith('Prd')) {

  // Create IAM Policy for RDS Snapshot
  const rdsSnapshotPolicy = new iam.PolicyStatement({
    effect: iam.Effect.ALLOW,
    actions: [
      "rds:CreateDBSnapshot",
      "rds:DescribeDBInstances",
      "rds:DescribeDBSnapshots"
    ],
    resources: ["*"],
  });

  // Add RDS Snapshot Policy to CodeBuild Project
  codeBuildProjectWebapp.addToRolePolicy(rdsSnapshotPolicy);

}
// ↑↑↑本番環境のみ適用する End




// ↓↓↓本番環境のみ適用する Start
if (stage.endsWith('Prd')) {

  // Create RDS Snapshot CodeBuild Project
  const rdsSnapshotProject = new codebuild.Project(this, `${context.codeBuildProjectWebappName}-rds-snapshot`, {
    projectName: `${context.codeBuildProjectWebappName}-rds-snapshot`,
    environment: {
      buildImage: codebuild.LinuxBuildImage.STANDARD_5_0,
      computeType: codebuild.ComputeType.SMALL,
    },
    environmentVariables: {
      RDS_INSTANCE_IDENTIFIER: {
        value: context.rdsInstanceId,
      },
      SNAPSHOT_IDENTIFIER: {
        value: `release-${context.rdsInstanceId}-\${CODEBUILD_BUILD_ID}`,
      },
    },
    buildSpec: codebuild.BuildSpec.fromObject({
      version: "0.2",
      phases: {
        pre_build: {
          commands: [
            "echo Creating RDS snapshot..."
          ],
        },
        build: {
          commands: [
            "aws rds create-db-snapshot --db-instance-identifier $RDS_INSTANCE_IDENTIFIER --db-snapshot-identifier $SNAPSHOT_IDENTIFIER"
          ],
        },
      },
    }),
  });

}
// ↑↑↑本番環境のみ適用する End


// ↓↓↓本番環境のみ適用する Start
if (stage.endsWith('Prd')) {

  // Add RDS Snapshot Stage to Pipeline
  const rdsSnapshotAction = new codepipeline.actions.CodeBuildAction({
    actionName: "RdsSnapshot",
    project: rdsSnapshotProject,
    input: buildOutput,
  });

  pipeline.addStage({
    stageName: "RdsSnapshot",
    actions: [rdsSnapshotAction],
  });

}
// ↑↑↑本番環境のみ適用する End
